buildscript {
	repositories {
		google()
		jcenter()
	}

	dependencies {
		classpath "com.android.tools.build:gradle:${VERSION_AGP}"
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${VERSION_KOTLIN}"
	}
}

tasks.register("clean", Delete.class) {
	delete rootProject.buildDir
}

tasks.register("createModule") {
	doFirst {
		def checkCategory = project.property("checkCategory").toString()
		def checkName = project.property("checkName").toString()
		def packageName = "net.twisterrob.lints.${checkCategory.toLowerCase()}"
		def module = project(":${checkCategory}").file(checkName)

		def buildGradle = new File(module, "build.gradle")
		buildGradle.parentFile.mkdirs()
		buildGradle.text = "apply from: rootProject.file('gradle/module-check-lib.gradle')\n"

		def manifest = new File(module, "src/main/AndroidManifest.xml")
		manifest.parentFile.mkdirs()
		manifest.text = "<manifest package=\"${packageName}.${checkName}\" />\n"
		
		def java = new File(module, "src/main/java/${packageName.replace('.', '/')}/${checkName}Violation.java")
		java.parentFile.mkdirs()
		java.text = """
			package ${packageName};
			
			public class ${checkName}Violation {
			}
		""".stripIndent().trim() + "\n"

		def kotlin = new File(module, "src/main/java/${packageName.replace('.', '/')}/${checkName}Violation.kt")
		kotlin.parentFile.mkdirs()
		kotlin.text = """
			package ${packageName}
		""".stripIndent().trim() + "\n"

		def settingsGradle = rootProject.file("settings.gradle")
		def lines = settingsGradle.text.split(/\r?\n/).toList()
		def categoryStartIndex = lines.findIndexOf { it == "include ':${checkCategory}'" }
		def categoryEndIndex = lines.findIndexOf(categoryStartIndex + 1) { it.count(":") == 1 }
		def includeLine = "include ':${checkCategory}:${checkName}'"
		def currentIndex = categoryStartIndex + 1
		def insertIndex = lines.findIndexOf(currentIndex) {
			currentIndex++ < categoryEndIndex && (it == "" || includeLine < it)
		}
		lines.add(insertIndex, includeLine)
		settingsGradle.text = lines.join(System.lineSeparator()) + System.lineSeparator()
	}
}
