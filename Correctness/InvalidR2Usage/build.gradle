plugins {
	alias(libs.plugins.butterknife)
}

apply from: rootProject.file('gradle/module-check-lib.gradle')

expectedViolationCount(2)

dependencies {
	implementation(libs.butterknife)
	annotationProcessor(libs.butterknife.compiler)

	// A hack to get access to InvalidR2UsageDetector for source and debugging.
	afterEvaluate { debugCompileOnly(debugLintJars(project)) }
}

// Based on com.android.build.gradle.internal.dependency.VariantDependencies.computeArtifactCollection.
import com.android.build.gradle.internal.publishing.AndroidArtifacts

static FileCollection debugLintJars(Project project) {
	Configuration configuration = project.configurations.debugRuntimeClasspath
	Action<org.gradle.api.artifacts.ArtifactView.ViewConfiguration> view = { config ->
		config.attributes { container ->
			container.attribute(AndroidArtifacts.ARTIFACT_TYPE, AndroidArtifacts.ArtifactType.LINT.type)
		}
	}
	return configuration
			.getIncoming()
			.artifactView(view)
			.artifacts
			.artifactFiles
}

tasks.withType(JavaCompile.class).configureEach { JavaCompile task ->
	task.options.compilerArgs += [
			"-Xlint:-processing",
	]
}
